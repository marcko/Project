{
  "name": "sails-generate-auth",
  "version": "0.2.0",
  "description": "Generate a Passport.js authentication layer for your Sails app that will Rock Your Socks™.",
  "author": {
    "name": "Kasper Isager",
    "email": "kasperisager@gmail.com"
  },
  "main": "lib/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/kasperisager/sails-generate-auth.git"
  },
  "bugs": {
    "url": "http://github.com/kasperisager/sails-generate-auth/issues",
    "email": "kasperisager@gmail.com"
  },
  "keywords": [
    "auth",
    "generator",
    "sails",
    "generate",
    "plugin",
    "passport"
  ],
  "license": "MIT",
  "dependencies": {
    "lodash": ">=2.4.x",
    "merge-defaults": ">=0.1.0"
  },
  "devDependencies": {
    "sails-generate": "*",
    "reportback": "*",
    "fs-extra": "*"
  },
  "sailsGenerator": {
    "type": "auth",
    "behavior": "overrides `sails generate auth`",
    "sailsVersion": "0.10.x"
  },
  "readme": "![image_squidhome@2x.png](http://i.imgur.com/RIvu9.png)\n\n# sails-generate-auth\n\n[![Release](http://img.shields.io/npm/v/sails-generate-auth.svg?style=flat)](https://www.npmjs.org/package/sails-generate-auth) [![Code Climate](http://img.shields.io/codeclimate/github/kasperisager/sails-generate-auth.svg?style=flat)](https://codeclimate.com/github/kasperisager/sails-generate-auth) [![Dependency Status](http://img.shields.io/gemnasium/kasperisager/sails-generate-auth.svg?style=flat)](https://gemnasium.com/kasperisager/sails-generate-auth) [![Downloads](http://img.shields.io/npm/dm/sails-generate-auth.svg?style=flat)](https://www.npmjs.org/package/sails-generate-auth)\n\nA Passport.js-based authentication generator for use with the Sails command-line interface.\n\nSo, how easy is it to use? Say you wanted to add Twitter authentication to our app for example – this is all you'd need:\n\n```javascript\ntwitter: {\n  name: 'Twitter',\n  protocol: 'oauth',\n  strategy: require('passport-twitter').Strategy,\n  options: {\n    consumerKey: 'your-consumer-key',\n    consumerSecret: 'your-consumer-secret'\n  }\n}\n```\n\nThis sets you up with an authentication endpoint at `/auth/twitter` as well as a callback at `/auth/twitter/callback` - easy, huh?\n\nBehind the scenes, the service uses the concept of \"Passports\" to store everything related to user authentication. This allows you to keep your own models free of authentication-related bloat as well as help you optimize your application as the data is queried separately only when authentication happens.\n\nI do encourage you to read through the entire source – everything's very well documented, so it should be an easy read.\n\n### Installation\n\nCertain generators are installed by default in Sails, but they can be overridden.  Check the [Sails docs](http://sailsjs.org/#!documentation) for information on installing generator overrides / custom generators.\n\nIn order to use a generator you will need the latest Sails, ~0.10, which can be installed with:\n\n```sh\nnpm install sails -g\n```\n\nOnce that's all set, install the generator:\n\n```sh\n$ npm install sails-generate-auth\n```\n\n### Production Usage\n\n##### On the command line\n\n```sh\n$ sails generate auth\n```\n\n##### In a node script\n\n```javascript\nvar path = require('path');\nvar sailsgen = require('sails-generate');\nvar scope = {\n\trootPath: path.resolve(__dirname)\n};\nsailsgen(require('sails-generate-auth'), scope, function (err) {\n\tif (err) throw err;\n\n\t// It worked.\n});\n```\n\n##### Requirements\n\nThe only  requirements, besides running the generator and adding some providers in `config/passport.js`, is having a set of routes that exposes the authentication endpoints. You'll also need to load the Passport.js middleware for all your controllers and install the required npm packages. Lastly, you need to add a line to `config/bootstrap.js` to load your Passport providers on startup.\n\nFor the routes, this is what you'll need to add to your `config/routes.json` file:\n\n```javascript\n'get /login': 'AuthController.login',\n'get /logout': 'AuthController.logout',\n'get /register': 'AuthController.register',\n\n'post /auth/local': 'AuthController.callback',\n'post /auth/local/:action': 'AuthController.callback',\n\n'get /auth/:provider': 'AuthController.provider',\n'get /auth/:provider/callback': 'AuthController.callback',\n'get /auth/:provider/:action': 'AuthController.callback',\n```\n\nNext, change your `config/bootstrap.js` to load your Passport providers on startup by adding the following line:\n\n```javascript\nsails.services.passport.loadStrategies();\n```\n\nAll required Passport.js middleware is contained within the `passport` policy so all you need to do is load it before your controllers in `config/policies.js`:\n\n```javascript\n'*': [ 'passport' ]\n```\n\nLastly, you will need to install the [`passport`](https://npmjs.org/package/passport), [`bcryptjs`](https://npmjs.org/package/bcryptjs) and [`validator`](https://npmjs.org/package/validator) packages from npm for everything to work correctly.\n\nIf you want to make use of the error messages, you'll also need to add the following locale definitions (example translations provided):\n\n```json\n{\n  \"Error.Passport.Password.Invalid\": \"The provided password is invalid!\",\n  \"Error.Passport.Password.Wrong\": \"Whoa, that password wasn't quite right!\",\n  \"Error.Passport.Password.NotSet\": \"Oh no, you haven't set a password yet!\",\n  \"Error.Passport.Username.NotFound\": \"Uhm, what's your name again?\",\n  \"Error.Passport.User.Exists\": \"This username is already taken.\",\n  \"Error.Passport.Email.NotFound\": \"That email doesn't seem right\",\n  \"Error.Passport.Email.Missing\": \"You need to supply an email-address for verification\",\n  \"Error.Passport.Email.Exists\": \"This email already exists. So try logging in.\",\n  \"Error.Passport.Username.Missing\": \"You need to supply a username\",\n  \"Error.Passport.Password.Missing\": \"Oh no, you haven't set a password yet!\",\n  \"Error.Passport.Generic\": \"Snap. Something went wrong with authorization.\"\n}\n```\n\n### Questions?\n\nSee `FAQ.md`.\n\n### More Resources\n\n- [Stackoverflow](http://stackoverflow.com/questions/tagged/sails.js)\n- [#sailsjs on Freenode](http://webchat.freenode.net/) (IRC channel)\n- [Twitter](https://twitter.com/sailsjs)\n- [Professional/enterprise](https://github.com/balderdashy/sails-docs/blob/master/FAQ.md#are-there-professional-support-options)\n- [Tutorials](https://github.com/balderdashy/sails-docs/blob/master/FAQ.md#where-do-i-get-help)\n- <a href=\"http://sailsjs.org\" target=\"_blank\" title=\"Node.js framework for building realtime APIs.\"><img src=\"https://github-camo.global.ssl.fastly.net/9e49073459ed4e0e2687b80eaf515d87b0da4a6b/687474703a2f2f62616c64657264617368792e6769746875622e696f2f7361696c732f696d616765732f6c6f676f2e706e67\" width=60 alt=\"Sails.js logo (small)\"/></a>\n\n---\n\nCopyright 2014 © [Kasper Kronborg Isager](http://kasperisager.github.io). Licensed under the terms of the [MIT License](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "_id": "sails-generate-auth@0.2.0",
  "dist": {
    "shasum": "44958659c4215a1ed3853f41f96519399da91a03"
  },
  "_from": "sails-generate-auth@",
  "_resolved": "https://registry.npmjs.org/sails-generate-auth/-/sails-generate-auth-0.2.0.tgz"
}
